# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: whisper_grpc/proto/whisper.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import whisper_grpc.proto.whisper_pb2


class WhisperBase(abc.ABC):

    @abc.abstractmethod
    async def LocalTranscribeAnimeDub(self, stream: 'grpclib.server.Stream[whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubRequest, whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/Whisper/LocalTranscribeAnimeDub': grpclib.const.Handler(
                self.LocalTranscribeAnimeDub,
                grpclib.const.Cardinality.UNARY_UNARY,
                whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubRequest,
                whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubResponse,
            ),
        }


class WhisperStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.LocalTranscribeAnimeDub = grpclib.client.UnaryUnaryMethod(
            channel,
            '/Whisper/LocalTranscribeAnimeDub',
            whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubRequest,
            whisper_grpc.proto.whisper_pb2.LocalTranscribeAnimeDubResponse,
        )
